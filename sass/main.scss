// UTILS Утилиыты, глобальные миксины, placeholders функции, вспомогательные селекторы, visualli hidden utils - 
@import './utils/variables';
@import './utils/visually-hidden';
@import './utils/placeholders';  
@import './utils/mixins';


// BASE normalize лок шлифты - глобальные стили, сброс стилей, цвета
@import './base/normalize';
@import './base/global';



// COMPONENTS модули разбивать для удобства себе, блоки components.

@import './components/container';
@import './components/section';
@import './components/button';
@import './components/title';
@import './components/text';
@import './components/list-scroll';
@import './components/page-header';
@import './components/address-nav';
@import './components/logo';
@import './components/social-list';

// LAYOUT содержит отдельные компоненты с отдельным файлом .scss для каждого из них
@import './layout/nav';
@import './layout/hero';
@import './layout/team';
@import './layout/abilities-list';
@import './layout/work';
@import './layout/clients';
@import './layout/footer';
@import './layout/footer-form';
@import './layout/modal';


// PAGES содержит стили для отдельных страниц, если это необходимо

// THEMES стили для разных тем

// VENDORS стили миксины и прочее от третих сторон

// в components можно создать папку COMMON- туда ложить компонент который переиспользуется 
// нужно называть файлы по именам класов, это удобно. Репета